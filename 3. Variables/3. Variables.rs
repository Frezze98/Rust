fn main() {
    // 1 üåü 
    let x: i32 = 5; // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∑–º—ñ–Ω–Ω—É x –∑–Ω–∞—á–µ–Ω–Ω—è–º 5
    let y: i32; // –ó–∞–ª–∏—à–∞—î–º–æ y –±–µ–∑ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó

    assert_eq!(x, 5);
    println!("Success!");
    

    // 2 üåü 
    let mut x = 1; // –û–≥–æ–ª–æ—à—É—î–º–æ –º—É—Ç–∞–±–µ–ª—å–Ω—É –∑–º—ñ–Ω–Ω—É x –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º 1
    x += 2; // –ó–º—ñ–Ω—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è x –Ω–∞ 3
    
    assert_eq!(x, 3);
    println!("Success!");
    

    // 3 üåü 
    let x: i32 = 10;
    {
        let y: i32 = 5;
        println!("The value of x is {} and value of y is {}", x, y);
    }
    // –ó–º—ñ–Ω–Ω–∞ y –±—ñ–ª—å—à–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—É—Ç!
    println!("The value of x is {}", x);
    

    // 4 üåüüåü 
    define_x(); // –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é define_x, —â–æ–± —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –∑–º—ñ–Ω–Ω—É x
}
fn define_x() {
    let x = "hello";
    println!("{}, world", x); // –í–∏–≤–æ–¥–∏–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è x


    // 5 üåüüåü 
    let x: i32 = 5;
    {
        let x = 12;
        assert_eq!(x, 12);
    }

    assert_eq!(x, 5); // –ó–æ–≤–Ω—ñ—à–Ω—ñ–π x –¥–æ—Å—ñ –¥–æ—Ä—ñ–≤–Ω—é—î 5

    let x = 42;
    println!("{}", x); // –í–∏–≤–æ–¥–∏—Ç—å "42".


    // 6 üåüüåü 
    let mut x: i32 = 1;
    x = 7;
    // –¢—É—Ç –º–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç—ñ–Ω—é–≤–∞–Ω–Ω—è —Ç–∞ –ø–µ—Ä–µ–æ–∑–Ω–∞—á–µ–Ω–Ω—è
    let x = x; // –ó–º—ñ–Ω–Ω–∞ `x` —Ç—ñ–Ω—é—î –ø–æ–ø–µ—Ä–µ–¥–Ω—é –∑–º—ñ–Ω–Ω—É
    // –¢–µ–ø–µ—Ä –º–æ–∂–µ–º–æ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ `x`, –æ—Å–∫—ñ–ª—å–∫–∏ –≤–æ–Ω–∞ —Å—Ç–∞–ª–∞ –Ω–µ—è–≤–Ω–æ—é
    let x = x + 3;

    let y = 4;
    // –¢—É—Ç —Ç–∞–∫–æ–∂ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç—ñ–Ω—é–≤–∞–Ω–Ω—è
    let y = "–Ø —Ç–∞–∫–æ–∂ –º–æ–∂—É –±—É—Ç–∏ –ø–æ–≤'—è–∑–∞–Ω–∏–π –∑ —Ç–µ–∫—Å—Ç–æ–º!"; 

    println!("Success!");


     // 7 üåüüåü 
    // –ü–µ—Ä—à–µ —Ä—ñ—à–µ–Ω–Ω—è    
    let x = 1;
    println!("The value of x is: {}", x); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∑–Ω–∞—á–µ–Ω–Ω—è x
    
    // –î—Ä—É–≥–µ —Ä—ñ—à–µ–Ω–Ω—è 
    let x = 1;
    let x = x + 2;
    println!("The updated value of x is: {}", x); // –í–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è

     // 8 üåüüåü 
    let (mut x, y) = (1, 2); // –û–≥–æ–ª–æ—à—É—î–º–æ x —è–∫ mut
    x += 2; // –ó–º—ñ–Ω—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è x
    assert_eq!(x, 3);
    assert_eq!(y, 2);
    println!("Success!");

     // 9 üåüüåü 
    let (x, y);
    (x, ..) = (3, 4); // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –∫–æ—Ä—Ç–µ–∂—É
    [.., y] = [1, 2]; // –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—è –º–∞—Å–∏–≤—É
    assert_eq!([x, y], [3, 2]); // –ó–∞–ø–æ–≤–Ω—é—î–º–æ –ø—Ä–æ–ø—É—Å–∫–∏

    println!("Success!");
}

     
     
     
     
     
     




